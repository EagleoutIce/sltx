#!/usr/bin/env python3

# Simple LaTeX Utility
# sltx

import os  # list directory
import sys  # cmd line args

import sltxpkg.config as sc
import sltxpkg.util as su
from sltxpkg import globals as sg
from sltxpkg.cmd_line_args import parser, sub_parser
from sltxpkg.command_config import Arg, Commands
from sltxpkg.globals import DEFAULT_CONFIG, LOCAL_CONFIG


def autoload_config(path: str, name: str):
    if os.path.isfile(path):
        print(
            "Automatically loading {name} config: '{path}'".format(**locals()))
        sc.load_configuration(path)


def retrieve_by_alias():
    return [alias[0]
            for alias in sub_parser.cmds.items()
            if tc in alias[1][0][1]][0]


if (len(sys.argv) <= 1):
    parser.parse_args(['-h'])

sg.args = parser.parse_args()


autoload_config(DEFAULT_CONFIG, 'default')
autoload_config(LOCAL_CONFIG, 'local')
print()
if hasattr(sg.args, 'files') and not sg.args.files:
    print("Set default files to:", sg.configuration[sg.C_DEFAULT_FILES])
    sg.args.files = sg.configuration[sg.C_DEFAULT_FILES]
    if not sg.args.files:
        print("Error: no files supplied")
        exit(1)

if sg.args.threads < 0:
    print("Set default thread-count to:",
          sg.configuration[sg.C_DEFAULT_THREADS])
    sg.args.threads = sg.configuration[sg.C_DEFAULT_THREADS]

if sg.args.config is not None:
    sc.load_configuration(sg.args.config)

try:
    tc = sg.args.command.lower()
    # This is ugly, but it basically checks if tc is in the commands and if so, use that commands
    # if not it searches through the list of aliasses and if it finds one it will use this
    # TODO: make this acceptable
    cmd = sub_parser.cmds[tc if tc in sub_parser.cmds else retrieve_by_alias()]
except KeyError:
    print("The supplied command:", sg.args.command,
          "is unknown. Choose one of:", list(sub_parser.cmds.keys()))
    exit(1)

cmd[0][0]()
